#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     20000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

#---------------------------------------------------------------------

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

frontend https-openshift
    bind *:443
    default_backend openshift-api-server
    mode tcp
    option tcplog
    tcp-request inspect-delay 5s 
    tcp-request content accept if { req_ssl_hello_type 1 } 
    acl is_master req.ssl_sni {{openshift_master_cluster_public_hostname}} 
    acl is_master req.ssl_sni {{openshift_master_cluster_hostname}} 
    use_backend openshift-router if !is_master 
    use_backend atomic-openshift-api if is_master 

backend atomic-openshift-api
    balance source
    mode tcp
{% for n in groups['masters'] %}
    server {{ n.name | lower }} {{ hostvars[n]['ansible_default_ipv4']['address'] }}:443 check
{% endfor %}
    
backend openshift-router
    balance source
    mode tcp
{% for n in groups['infra'] %}
    server {{ n.name | lower }} {{ hostvars[n]['ansible_default_ipv4']['address'] }}:443 check
{% endfor %}
